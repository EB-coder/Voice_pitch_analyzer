# import pyaudio
# import wave



# # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø–∏—Å–∏
# FORMAT = pyaudio.paInt16      # 16-–±–∏—Ç
# CHANNELS = 1                  # –ú–æ–Ω–æ
# RATE = 44100                 # –ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏
# CHUNK = 1024                 # –†–∞–∑–º–µ—Ä –±–ª–æ–∫–∞
# RECORD_SECONDS = 10          # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏
# OUTPUT_FILENAME = "voice.wav"  # –ò–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞

# # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
# audio = pyaudio.PyAudio()

# stream = audio.open(format=FORMAT,
#                     channels=CHANNELS,
#                     rate=RATE,
#                     input=True,
#                     frames_per_buffer=CHUNK)

# print("üéôÔ∏è Pls speak...")

# frames = []

# for _ in range(0, int(RATE / CHUNK * RECORD_SECONDS)):
#     data = stream.read(CHUNK)
#     frames.append(data)

# print("‚úÖ Recording complete.")

# # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –∑–∞–∫—Ä—ã—Ç—å
# stream.stop_stream()
# stream.close()
# audio.terminate()

# # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ WAV —Ñ–∞–π–ª
# with wave.open(OUTPUT_FILENAME, 'wb') as wf:
#     wf.setnchannels(CHANNELS)
#     wf.setsampwidth(audio.get_sample_size(FORMAT))
#     wf.setframerate(RATE)
#     wf.writeframes(b''.join(frames))

# print(f"üìÅ File saved as {OUTPUT_FILENAME}")

import sounddevice as sd
import numpy as np
import wave
import sys  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

def record_audio():
    RATE = 44100
    CHANNELS = 1
    DTYPE = np.int16
    RECORD_SECONDS = 10
    OUTPUT_FILENAME = "voice.wav"

    print("üéôÔ∏è Recording started...", flush=True)  # flush –¥–ª—è Streamlit
    
    try:
        audio = sd.rec(
            int(RECORD_SECONDS * RATE),
            samplerate=RATE,
            channels=CHANNELS,
            dtype=DTYPE
        )
        
        # –í—ã–≤–æ–¥–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –∫–æ–Ω—Å–æ–ª—å
        for i in range(RECORD_SECONDS):
            print(f"‚è±Ô∏è {i+1}/{RECORD_SECONDS} sec", flush=True)
            sd.sleep(1000)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ sounddevice
        
        sd.wait()
        print("‚úÖ Recording complete", flush=True)
        
        with wave.open(OUTPUT_FILENAME, 'wb') as wf:
            wf.setnchannels(CHANNELS)
            wf.setsampwidth(2)
            wf.setframerate(RATE)
            wf.writeframes(audio.tobytes())
        
        print(f"üìÅ Saved to {OUTPUT_FILENAME}", flush=True)
        return True
    
    except Exception as e:
        print(f"‚ùå Error: {str(e)}", flush=True)
        return False

if __name__ == "__main__":
    record_audio()
